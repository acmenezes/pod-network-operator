apiVersion: v1
kind: ServiceAccount
metadata:
  name: cnf-telco-sa
  namespace: cnf-telco
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: pod-network-config-role
  namespace: cnf-telco
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - podnetwork.opdev.io
  resources:
  - podnetworkconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - podnetwork.opdev.io
  resources:
  - podnetworkconfigs/finalizers
  verbs:
  - update
- apiGroups:
  - podnetwork.opdev.io
  resources:
  - podnetworkconfigs/status
  verbs:
  - get
  - patch
  - update 
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pod-network-config-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pod-network-config-role
subjects:
- kind: ServiceAccount
  name: cnf-telco-sa
  namespace: cnf-telco
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cnf-example-a
  namespace: cnf-telco
  labels:
    podNetworkConfig: podnetwork-sample-a
spec:
  selector:
    matchLabels:
      podNetworkConfig: podnetwork-sample-a
  replicas: 2
  template:
    metadata:
      name: cnf-example-a
      namespace: cnf-telco
      labels:
        podNetworkConfig: podnetwork-sample-a
    spec:
      serviceAccountName: cnf-telco-sa
      containers:
      - command:
        - /bin/bash 
        - -c 
        - --
        args:
        - "while true; do sleep 30; done;"
        image: "nicolaka/netshoot:latest"
        imagePullPolicy: Always
        name: cnf-example
      nodeSelector:
        cnf-telco: "true"        
